
INFO ==========================
	There is another test recorder 
		http://testrecorder.amygdalum.net/index.html
		Get from github and try to see what tests are generated
		

DONE ==========================
	OK - Handle also exceptions thrown by act
		assertThrows(IllegalArgumentException.class, () -> new SampleService().testException(5));
	OK - if it's @Component or not

	OK - if the class has equals or not

	OK - handle arrays
	
	OK - handle ArrayList<>

	OK - the dependencies (also dependencies of dependencies ...)
		keep all dependencies in the test to avoid creation of 2 ObjectCodeGenerator for the same object
	OK - different objects can have common dependencies
		we need a dependency sorter
	OK - why args types are generated as 
			List<Person> arrayList1 and 
		but results as
			List result?
	OK - problem with repeated args

	OK - cache objects per TestGenerator

	OK - Get fields to set from getters and public fields to Optional<>
	
	OK Get constructors and their arguments

TODO ==========================
	ObjectCodeGenerators
		solve equality when there is no equals
			Ex: int[] == int[]
	
		Object creation 
			test cyclic dependencies after I have other ways of object creation
				I tried with Lombok, but Lombok could not handle it
			how to differentiate between Float and float for different objects?
		
			
		Non-@Component object creation priority
				Known object like primitives and utils first
					https://medium.com/analytics-vidhya/top-10-java-classes-from-utility-package-a4bebde7c267
					handle Enum
					handle HashMap<>
					handle Map<>
				Unknown objects
					!!!! Creation priority
						if NoArgs constructor exists and no fields to be set
							Create with NoArgs constructor 
						OK - if Lombok builder exists
							Create with Lombok builder
						if there is a identifiable constructor covering all the fields
							Create with args constructor 
						if there is a NoArg constructor + all setters
							Create with setters 
						if there is a NoArg constructor + public fields
							Create with fields 
						else
							Cannot create => write some comments explaining fields values to be set
				
				!!!! Object creation for the target object
				
				
		@Component dependencies will be mocked
			Intercept calls to all dependent components and create when() calls
			
	Test Code Generation
		Check expected result
			if returnType != void
				if has equals
					assertEquals(expectedResult, result)
				else 
					if getters exist
						test with getters
					if public fields exist
						test with public fields
			OK - if returnType == void
				skip checking the equals and skip collecting the result

		Check side effects on target, arguments, any dependencies
			create assertEquals() for all the new values
     
	
	Move all the test classes within the testrecording package
	
	Write tests for all the code
		check coverage again

	Sa citesc de la rus cum sa pregatesc cod pt Git

	
LATER ==========================
	if needed object initialisation code could be learned from github	
	
	http://tutorials.jenkov.com/java-reflection/private-fields-and-methods.html
	
	Handle Generics

	there will be a case when the dependencies are circular

	create non-components with factory
	
	improve StringGenerator if slow
	
	arrays of arrays
	

	
